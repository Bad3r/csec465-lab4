---
#################### Linux OS Info #######################
- name: OSquery Linux
  hosts: linux
  vars:
    ansible_connection: ssh
    ansible_user: student
    ansible_ssh_pass: student
    ansible_sudo_pass: student
  become: true

  tasks:
    - name: Getting Linux hostnames
      shell: echo "SELECT hostname FROM system_info;" | osqueryi
      register: linux_hostnames
    - debug:
        var: linux_hostnames.stdout_lines

    - name: Getting Linux OS info
      shell: echo "SELECT name, major, minor, patch, build FROM os_version;" | osqueryi
      register: linux_os
    - debug:
        var: linux_os.stdout_lines

    - name: Getting Linux IP addresses
      shell: echo "SELECT interface, address, mask FROM interface_addresses;" | osqueryi
      register: linux_ip
    - debug:
        var: linux_ip.stdout_lines

    - name: Getting auto start processes
      shell: echo "SELECT name, path FROM processes WHERE parent = 1;" | osqueryi
      register: linux_boot
    - debug:
        var: linux_boot.stdout_lines

    - name: Show all loaded kernel modules on the system
      shell: echo "SELECT * FROM kernel_modules LIMIT 5;" | osqueryi
      register: kernel_modules
    - debug:
        var: kernel_modules.stdout_lines

    - name: Show only the name of package and version.
      shell: echo "SELECT name, version FROM deb_packages ORDER BY name;" | osqueryi
      register: linux_packages
    - debug:
        var: linux_packages.stdout_lines

    - name: Getting Linux users
      shell: echo "SELECT username FROM users;" | osqueryi
      register: linux_users
    - debug:
        var: linux_users.stdout_lines

    - name: check the last login users, use the 'last' table
      shell: echo "SELECT * FROM last WHERE type=7;" | osqueryi
      register: linux_last
    - debug:
        var: linux_last.stdout_lines

    - name: Getting Linux services
      shell: echo "select * from etc_services" | osqueryi
      register: installed_out
    - debug:
        var: installed_out.stdout_lines

    - name: Getting Linux network connections
      shell: echo "SELECT * FROM process_open_sockets WHERE remote_port != 80 AND remote_port != 443 AND (family = 2 OR family = 10) AND state != 'LISTEN' AND remote_port != 0;" | osqueryi
      register: linux_connections
    - debug:
        var: linux_connections.stdout_lines

###################### WINDOWS #########################
- name: OSQuery Windows
  hosts: windows
  vars:
    ansible_port: 5985
    ansible_connection: winrm
    ansible_user: intern99@csec465g2
    ansible_password: Letmein123!
    ansible_winrm_transport: ntlm

  tasks:
    - name: Set osquery on the $env:PATH
      win_path:
        elements:
        - '%SystemRoot%\Program Files\osquery'

    - name: Get Windows hostname
      win_command: osqueryi.exe -
      args:
        stdin: -json "select hostname from system_info;"
      register: win_hostname

    - name: Get Windows OS info
      win_command: osqueryi.exe -
      args:
        stdin: -json "select * from os_version;"
      register: win_info

    - name: Get Windows IP address
      win_command: osqueryi.exe -
      args:
        stdin: -json "select friendly_name, interface, address, mask from interface_addresses;"
      register: win_IP

    - name: Get Windows local users
      win_command: osqueryi.exe -
      args:
        stdin: -json "select username from users where type == 'local';"
      register: win_users

    - name: Get Windows installed applications
      win_command: osqueryi.exe -
      args:
        stdin: -json "select name, version from programs;"
      register: win_apps

    - name: Get Windows autoruns
      win_command: osqueryi.exe -
      args:
        stdin: -json "select name, source from autoexec;"
      register: win_autos

    - name: Get Windows recent logons
      win_command: osqueryi.exe -
      args:
        stdin: -json "select logon_id, user, logon_time from logon_sessions;"
      register: win_logon

    - name: Get Windows logged on
      win_command: osqueryi.exe -
      args:
        stdin: -json "select user, type, tty, pid from logged_in_users;"
      register: win_loggedon

    - name: Get Windows running processes
      win_command: osqueryi.exe -
      args:
        stdin: -json "select pid, name, path, state from processes;"
      register: win_proc

    - name: Get Windows port listeners
      win_command: osqueryi.exe -
      args:
        stdin: -json "pid, port, socket, path from listening_ports;"
      register: win_cons

    - debug:
        msg:
              - Hostname
              - "{{win_hostname}}"
              - OS Info
              - "{{win_info}}"
              - IP Address
              - "{{win_IP}}"
              - Users
              - "{{win_users}}"
              - Applications
              - "{{win_apps}}"
              - Autoruns
              - "{{win_autos}}"
              - Logons
              - "{{win_logon}}"
              - Logged On
              - "{{win_loggedon}}"
              - Processes
              - "{{win_proc}}"
              - Connections
              - "{{win_cons}}"
